openapi: 3.0.1
info:
  title: Analysis public REST API
  version: 0.0.2
paths:
  /analyses:
    summary: 'Manage analyses'
    post:
      summary: 'Create an analysis'
      description: ""
      operationId: createAnalysisV1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisDTO'
      responses:
        '201':
          description: 'Analysis created'
        '400':
          description: 'Invalid input'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        default:
          description: 'Default error sample response'
      tags:
        - 'Analysis'
    get:
      summary: 'Get a list of analysis of the logged user'
      description: ""
      operationId: listAnalysesV1
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnalysisDTO'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        default:
          description: 'Default error sample response'
      tags:
        - 'Analysis'
  /analyses/{analysisId}:
    summary: 'Manage an analysis'
    parameters:
      -
        name: analysisId
        in: path
        required: true
        description: 'The id of the analysis to retrieve'
        schema:
          type: string
    get:
      summary: 'Get an analysis'
      description: ""
      operationId: getAnalysisV1
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisDTO'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/UnaccessibleError'
        '404':
          $ref: '#/components/responses/AnalysisNotFoundError'
      tags:
        - 'Analysis'
    patch:
      summary: 'Update an analysis (Only status and visibility are updatable)'
      description: ""
      operationId: patchAnalysisV1
      requestBody:
        content:
          application/json:
            schema:
              properties:
                status:
                  $ref: '#/components/schemas/AnalysisStatusEnum'
      responses:
        '204':
          description: "Analysis updated"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisDTO'
        '400':
          $ref: '#/components/responses/InvalidStatusError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/UnaccessibleError'
        '404':
          $ref: '#/components/responses/AnalysisNotFoundError'
      tags:
        - 'Analysis'
    delete:
      summary: "Set the status of an analysis to cancelled"
      operationId: deleteAnalysisV1
      responses:
        '200':
          description: "Status change scheduled"
        '400':
          $ref: '#/components/responses/InvalidStatusError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/UnaccessibleError'
        '404':
          $ref: '#/components/responses/AnalysisNotFoundError'
      tags:
        - 'Analysis'
  /analyses/{analysisId}/history:
    summary: 'Get the status history of an analysis'
    parameters:
      -
        name: analysisId
        in: path
        required: true
        description: 'The id of the analysis to retrieve'
        schema:
          type: string
    get:
      summary: 'Get the status history of an analysis'
      description: ""
      operationId: getAnalysisHistoryV1
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnalysisStatusHistoryDTO'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/UnaccessibleError'
        '404':
          $ref: '#/components/responses/AnalysisNotFoundError'
      tags:
        - 'Analysis'

  /analysis-results/twitter-neel/{analysisId}:
    summary: 'Get the result of a twitter neel analysis'
    parameters:
      -
        name: analysisId
        in: path
        required: true
        description: 'The id of the analysis'
        schema:
          type: string
    get:
      summary: 'Get the results of an analysis'
      description: ""
      operationId: getTwitterNeelAnalysisResultsV1
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TwitterNeelAnalysisResultDTO'
        '400':
          description: "The requested analysis is not a Twitter NEEL analysis"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/UnaccessibleError'
        '404':
          $ref: '#/components/responses/AnalysisNotFoundError'
      tags:
        - 'Analysis'
components:
  schemas:
    AnalysisStatusEnum:
      type: string
      enum:
        - READY
        - STARTED
        - STOPPED
        - COMPLETED
        - CANCELLED
        - FAILED
    AnalysisVisibilityEnum:
      type: string
      enum:
        - PRIVATE
        - PUBLIC
    AnalysisDTO:
      type: object
      required:
        - type
        - inputType
        - ownerId
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          enum:
            - TWITTER_NEEL
        inputType:
          type: string
          enum:
            - STREAM
            - DOCUMENT
        ownerId:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/AnalysisStatusEnum'
        visibility:
          $ref: '#/components/schemas/AnalysisVisibilityEnum'
        query:
          type: string
          nullable: true
        documentId:
          type: string
          nullable: true
    AnalysisStatusHistoryDTO:
      type: object
      properties:
        oldStatus:
          $ref: '#/components/schemas/AnalysisStatusEnum'
        newStatus:
          $ref: '#/components/schemas/AnalysisStatusEnum'
        message:
          type: string
        errorCode:
          type: integer
        userId:
          type: string
        date:
          type: string
    AnalysisResultDTO:
      type: object
      properties:
        totalResultsCount:
          type: integer
        count:
          type: integer
        offset:
          type: integer
    TwitterNeelAnalysisResultDTO:
      allOf:
        - $ref: '#/components/schemas/AnalysisResultDTO'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/ProcessedTweetDTO'
    ProcessedTweetDTO:
      type: object
      properties:
        id:
          type: string
        analysisId:
          type: string
        status:
          $ref: '#/components/schemas/TwitterStatusDTO'
        entities:
          type: array
          items:
            $ref: '#/components/schemas/LinkedEntityDTO'
    TwitterStatusDTO:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        user:
          $ref: '#/components/schemas/TwitterUserDTO'
    TwitterUserDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        screenName:
          type: string
        location:
          type: string
        profileImageUrl:
          type: string
        coordinates:
          $ref: '#/components/schemas/CoordinatesDTO'
    CoordinatesDTO:
      type: object
      properties:
        latitude:
          type: integer
        longitude:
          type: integer
    LinkedEntityDTO:
      type: object
      properties:
        link:
          type: string
        confidence:
          type: number
        category:
          type: string
        isNil:
          type: boolean
        nilCluster:
          type: string
        position:
          $ref: '#/components/schemas/TextRangeDTO'
        resource:
          $ref: '#/components/schemas/ResourceDTO'
    TextRangeDTO:
      type: object
      properties:
        start:
          type: integer
        end:
          type: integer
    ResourceDTO:
      type: object
      properties:
        name:
          type: string
        shortDesc:
          type: string
        thumb:
          type: string
        thumbLarge:
          type: string
        url:
          type: string
        coordinates:
          $ref: '#/components/schemas/CoordinatesDTO'
  parameters:
    limitParam:
      name: limit
      in: query
      description: 'How many items to return at one time (max 100)'
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 100
        default: 100
    offsetParam:
      name: offset
      in: query
      description: 'The offset from which start to fetch items'
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 0
  responses:
    UnauthorizedError:
      description: JWT token is missing or invalid
    UnaccessibleError:
      description: Cannot access to this analysis
    AnalysisNotFoundError:
      description: Analysis not found
    InvalidStatusError:
      description: Analysis status change cannot be applied

servers:
  -
    url: /api/public
    variables: {}
    description: 'Analysis microservice'
